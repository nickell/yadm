# vim: set fdm=marker fmr={{{,}}} fdl=0 ft=i3config:

# {{{ Appearance
workspace_layout tabbed

default_border pixel 3
default_floating_border pixel 3

hide_edge_borders none

set_from_resource $fontSize      i3FontSize    14
set_from_resource $barFontSize   i3BarFontSize 11

# Font for window titles. Will also be used by the bar unless a different font is used in the bar {} block below.
font xft:SF Pro Display, Font Awesome 6 Free $fontSize

for_window [class=".*"] title_format "<span size=\\"small\\"> %title</span>"

for_window [class=".*"] border pixel 3

gaps inner 10
gaps outer -2

smart_borders on
# }}}

# {{{ Behavior
set $mod Mod4
floating_modifier $mod
workspace_auto_back_and_forth yes

# switch to workspace with urgent window automatically
for_window [urgent=latest] focus

# {{{ Workspace keybindings
# navigate workspaces next / previous
bindsym $mod+Ctrl+Right workspace next
bindsym $mod+Ctrl+Left workspace prev

# Workspace names
# to display names or symbols instead of plain workspace numbers you can use
# something like: set $ws1 1:mail
#                 set $ws2 2:
set $ws1 1
set $ws2 2
set $ws3 3
set $ws4 4
set $ws5 5
set $ws6 6
set $ws7 7
set $ws8 8

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8

# Move focused container to workspace
bindsym $mod+Ctrl+1 move container to workspace $ws1; workspace $ws1
bindsym $mod+Ctrl+2 move container to workspace $ws2; workspace $ws2
bindsym $mod+Ctrl+3 move container to workspace $ws3; workspace $ws3
bindsym $mod+Ctrl+4 move container to workspace $ws4; workspace $ws4
bindsym $mod+Ctrl+5 move container to workspace $ws5; workspace $ws5
bindsym $mod+Ctrl+6 move container to workspace $ws6; workspace $ws6
bindsym $mod+Ctrl+7 move container to workspace $ws7; workspace $ws7
bindsym $mod+Ctrl+8 move container to workspace $ws8; workspace $ws8

# Move to workspace with focused container
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
# }}}

# {{{ Floating windows
# Open specific applications in floating mode
for_window [title="alsamixer"] floating enable border pixel 1
for_window [class="Galculator"] floating enable border pixel 1 mark "galculator" move scratchpad
for_window [class="GParted"] floating enable border normal
for_window [title="i3_help"] floating enable sticky enable border normal
for_window [class="Lightdm-settings"] floating enable
for_window [class="Lxappearance"] floating enable sticky enable border normal
for_window [class="Nitrogen"] floating enable sticky enable border normal
for_window [class="Oblogout"] fullscreen enable
for_window [class="octopi"] floating enable
for_window [class="Pamac-manager"] floating enable
for_window [class="Pavucontrol"] floating enable
for_window [class="qt5ct"] floating enable sticky enable border normal
for_window [class="Qtconfig-qt4"] floating enable sticky enable border normal
for_window [class="Simple-scan"] floating enable border normal
for_window [class="(?i)System-config-printer.py"] floating enable border normal
for_window [class="Skype"] floating enable border normal
for_window [class="Timeset-gui"] floating enable border normal
for_window [class="(?i)virtualbox"] floating enable border normal
for_window [class="Xfburn"] floating enable
for_window [class="Xfce4-power-manager-settings"] floating enable
for_window [class="kitty" title="Scratchpad"] border pixel 1, mark "kitty" move scratchpad
for_window [class="kitty" title="Ranger"] border pixel 1, mark "ranger", move scratchpad
for_window [class="obsidian"] border pixel 1, mark "obsidian", move scratchpad
for_window [class="Variety"] floating enable
for_window [class="lightdm-gtk-greeter-settings"] floating enable
for_window [class="font-manager"] floating enable
# }}}
# }}}

# {{{ Bar Config
bar {
    font xft:SF Pro Display, Font Awesome 6 Free $barFontSize
    position bottom
    status_command /usr/bin/i3status-rs /home/chad/.config/i3status-rust/config.toml
    colors {
        separator #666666
        background #222222
        statusline #dddddd
        focused_workspace #0088CC #0088CC #ffffff
        active_workspace #333333 #333333 #ffffff
        inactive_workspace #333333 #333333 #888888
        urgent_workspace #2f343a #900000 #ffffff
    }
}
# }}}

# {{{ Theme Colors
# class                 border  bground text    indicator child_border
client.focused          #fa9d1b #6272A4 #F8F8F2 #6272A4   #fa9d1b
client.focused_inactive #44475A #44475A #F8F8F2 #44475A   #44475A
client.unfocused        #282A36 #282A36 #BFBFBF #282A36   #282A36
client.urgent           #44475A #FF5555 #F8F8F2 #FF5555   #FF5555
client.placeholder      #282A36 #282A36 #F8F8F2 #282A36   #282A36

client.background       #F8F8F2
# }}}

# {{{ Variables
set $browser google-chrome-stable
# }}}

# {{{ Keybindings
bindsym $mod+9 exec --no-startup-id /usr/bin/xtrlock
bindsym --release $mod+Return exec --no-startup-id /home/chad/.bin/open-terminal.sh
bindsym $mod+Tab workspace back_and_forth
bindsym $mod+a focus parent
bindsym $mod+b [con_mark="ranger"] scratchpad show
bindsym $mod+o [con_mark="obsidian"] scratchpad show
bindsym $mod+bracketright mode $shortcut_mode
bindsym $mod+c exec $browser
bindsym $mod+d exec --no-startup-id ~/.config/rofi/launchers/type-2/launcher.sh
bindsym $mod+i exec --no-startup-id rofi -modi "clipboard:greenclip print" -show clipboard -run-command '{cmd}' -theme $HOME/.config/rofi/launchers/type-2/style-1.rasi
bindsym $mod+e workspace 
bindsym $mod+f fullscreen toggle
bindsym $mod+g [con_mark="galculator"] scratchpad show
bindsym $mod+Shift+c append_layout ~/.config/i3/codespace.json
bindsym $mod+v layout toggle splitv tabbed stacking
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right
bindsym $mod+m exec --no-startup-id /usr/bin/rofimoji
bindsym $mod+minus [con_mark="kitty"] scratchpad show
bindsym $mod+q kill
bindsym $mod+r mode "resize"
bindsym $mod+s workspace 
bindsym $mod+space focus mode_toggle
bindsym $mod+t workspace 僧
bindsym $mod+x workspace 
bindsym $mod+p mode $print_mode
bindsym $mod+u mode $launch_app_mode
bindsym $mod+z workspace 犯

bindsym $mod+Ctrl+h focus parent; focus left
bindsym $mod+Ctrl+l focus parent; focus right
bindsym $mod+Ctrl+m exec pavucontrol
bindsym $mod+Shift+Down move workspace to output down
bindsym $mod+Shift+Left move workspace to output left
bindsym $mod+Shift+Right move workspace to output right
bindsym $mod+Shift+Up move workspace to output up
bindsym $mod+Shift+b exec kitty --title="Sudo Ranger" -e bash -c "sudo -E ranger"
bindsym $mod+Shift+e move container to workspace 
bindsym $mod+Shift+equal floating toggle; mark "default-scratchpad"; move scratchpad; scratchpad show
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right
bindsym $mod+Shift+minus mark "default-scratchpad"; move scratchpad
bindsym $mod+Shift+o move container to workspace 
bindsym $mod+Shift+q split toggle
bindsym $mod+Shift+r restart
bindsym $mod+Shift+s move container to workspace 
bindsym $mod+Shift+space floating toggle
bindsym $mod+Shift+t move container to workspace 僧
bindsym $mod+Shift+x move container to workspace 
bindsym $mod+Shift+z move container to workspace 犯

# Media player controls
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioPrev exec playerctl previous
bindsym XF86Favorites exec playerctl play-pause

# Brightness controls
bindsym XF86MonBrightnessDown exec --no-startup-id /home/chad/.bin/change-brightness-and-notify -U
bindsym XF86MonBrightnessUp exec --no-startup-id /home/chad/.bin/change-brightness-and-notify -A

# Dunst controls
bindcode Control+49 exec --no-startup-id dunstctl history-pop
bindsym Control+Shift+space exec --no-startup-id dunstctl close
# bindsym Control+Shift+space exec --no-startup-id dunstctl close-all
bindsym Control+Shift+period exec --no-startup-id dunstctl context
# }}}

# {{{ Modes
# {{{ mode_system: Set shut down, restart and locking features
bindsym $mod+0 mode "$mode_system"
set $mode_system (l)ogout, (s)uspend, (r)eboot, (S)hutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id kill -9 -1
    bindsym s exec --no-startup-id systemctl suspend, mode "default"
    bindsym r exec --no-startup-id systemctl reboot, mode "default"
    bindsym Shift+s exec --no-startup-id systemctl poweroff, mode "default"

    # exit system mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
# }}}

# {{{ Resize mode
# Resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode
        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 5 px or 5 ppt
        bindsym j resize grow height 5 px or 5 ppt
        bindsym k resize shrink height 5 px or 5 ppt
        bindsym l resize grow width 5 px or 5 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # exit resize mode: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
# }}}

# {{{ mode: launch_app_mode
set $launch_app_mode Launch app: (s)lack | (1)password | (e)mail | (x)db launch mode | li(n)ear
mode "$launch_app_mode" {
        bindsym n exec google-chrome-stable --app="https://linear.app/get-robin/view/c58cfa9a-3d94-4368-8262-fa41f71d4ea5"; mode "default"
        bindsym s exec /usr/bin/slack; mode "default"
        bindsym 1 exec /usr/bin/1password; mode "default"
        bindsym e mode $email_launch_mode
        bindsym x mode $db_launch_mode

        # exit mode: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
# }}}

# {{{ mode: email_launch_mode
set $email_launch_mode (p)ersonal | (r)obin | proroo(f)ing
mode "$email_launch_mode" {
        bindsym p mode $personal_launch_mode
        bindsym r mode $robin_launch_mode
        bindsym f mode $proroofing_launch_mode

        # exit mode: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

# {{{ mode: personal_launch_mode
set $personal_launch_mode personal (e)mail | (c)alendar | (d)rive
mode "$personal_launch_mode" {
        bindsym e exec google-chrome-stable --app="https://mail.google.com/mail/u/?authuser=nickell.chad@gmail.com"
        bindsym c exec google-chrome-stable --app="https://calendar.google.com/calendar/u/?authuser=nickell.chad@gmail.com"
        bindsym d exec google-chrome-stable --app="https://drive.google.com/drive/u/?authuser=nickell.chad@gmail.com"

        # exit mode: Enter or Escape
        bindsym Return mode $email_launch_mode
        bindsym Escape mode "default"
}
# }}}

# {{{ mode: robin_launch_mode
set $robin_launch_mode robin (e)mail | (c)alendar | (d)rive
mode "$robin_launch_mode" {
        bindsym e exec google-chrome-stable --app="https://mail.google.com/mail/u/?authuser=chad@usepara.com"
        bindsym c exec google-chrome-stable --app="https://calendar.google.com/calendar/u/?authuser=chad@usepara.com"
        bindsym d exec google-chrome-stable --app="https://drive.google.com/drive/u/?authuser=chad@usepara.com"

        # exit mode: Enter or Escape
        bindsym Return mode $email_launch_mode
        bindsym Escape mode "default"
}
# }}}

# {{{ mode: proroofing_launch_mode
set $proroofing_launch_mode proroofing (e)mail | (c)alendar | (d)rive
mode "$proroofing_launch_mode" {
        bindsym e exec google-chrome-stable --app="https://mail.google.com/mail/u/?authuser=chad@proroofing.com"
        bindsym c exec google-chrome-stable --app="https://calendar.google.com/calendar/u/?authuser=chad@proroofing.com"
        bindsym d exec google-chrome-stable --app="https://drive.google.com/drive/u/?authuser=chad@proroofing.com"

        # exit mode: Enter or Escape
        bindsym Return mode $email_launch_mode
        bindsym Escape mode "default"
}
# }}}
# }}}

# {{{ mode: db_launch_mode
set $db_launch_mode (p)rod | (s)tage | (d)ev
mode "$db_launch_mode" {
        bindsym p exec GTK_THEME=breeze dbeaver -data prod
        bindsym s exec GTK_THEME=breeze dbeaver -data stage
        bindsym d exec GTK_THEME=breeze dbeaver -data dev

        # exit mode: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
# }}}

# {{{ mode: shortcut_mode
set $shortcut_mode Shortcut: (m)onitor mode | (k)ill mode | (s)hortcut mode | (n)/(p) variety
mode "$shortcut_mode" {
        bindsym k mode $kill_mode
        bindsym m mode $monitor_mode
        bindsym s mode $seldom_shortcut_mode
        bindsym n exec /usr/bin/variety --next
        bindsym p exec /usr/bin/variety --previous

        # exit mode: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
# }}}

# {{{ mode: kill_mode
set $kill_mode Kill: (c)hrome | (f)irefox
mode "$kill_mode" {
        bindsym c exec killall chrome; mode "default"
        bindsym f exec killall firefox; mode "default"

        # exit mode: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
# }}}

# {{{ mode: seldom_shortcut_mode
set $seldom_shortcut_mode Seldom Used Shortcuts: restart (d)unst | (r)anger | (o)bsidian
mode "$seldom_shortcut_mode" {
        bindsym d exec "killall dunst; exec notify-send 'restart dunst'"; mode "default"
        bindsym r exec --no-startup-id kitty --title="Ranger" ranger; mode "default"
        bindsym o exec --no-startup-id /usr/bin/obsidian; mode "default"

        # exit mode: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
# }}}

# {{{ mode: monitor_mode
set $monitor_mode Monitor: (a)uto (h)igh (m)ed (n)low/med (l)ow (x)tra low | (c)losed docked | (o)pen docked | (d)ual
mode "$monitor_mode" {
        # Auto detect monitors
        bindsym a exec xrandr --auto, mode "default"

        # Scripted setups
        bindsym h exec /bin/bash /home/chad/.screenlayout/high.sh; exec $HOME/.fehbg &, mode "default"
        bindsym m exec /bin/bash /home/chad/.screenlayout/medium.sh; exec $HOME/.fehbg &, mode "default"
        bindsym n exec /bin/bash /home/chad/.screenlayout/low-medium.sh; exec $HOME/.fehbg &, mode "default"
        bindsym l exec /bin/bash /home/chad/.screenlayout/low.sh; exec $HOME/.fehbg &, mode "default"
        bindsym x exec /bin/bash /home/chad/.screenlayout/extra-low.sh; exec $HOME/.fehbg &, mode "default"
        bindsym c exec /bin/bash /home/chad/.screenlayout/Closed\ Docked.sh; exec $HOME/.fehbg &, mode "default"
        bindsym o exec /bin/bash /home/chad/.screenlayout/Open\ Docked.sh; exec $HOME/.fehbg &, mode "default"
        bindsym d exec /bin/bash /home/chad/.screenlayout/dual.sh; exec $HOME/.fehbg &, mode "default"

        # exit monitor mode: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
# }}}

# {{{ mode: print_mode
set $print_mode Print screen: (w)indow | (s)election to clipboard | (c)ast screen | (k)ill screencast
mode "$print_mode" {
        bindsym w --release exec --no-startup-id /home/chad/.bin/current-window-to-clipboard, mode "default"
        bindsym s --release exec flameshot gui --clipboard --path /home/chad/Pictures/screenshots, mode "default"
        bindsym c --release exec ffcast -q -s rec /home/chad/Videos/screencast-"$(date +%F\ %T)".mp4, mode "default"
        bindsym k --release exec pkill -fxn '(/\S+)*ffmpeg\s.*\sx11grab\s.*', mode "default"

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
# }}}

# {{{ mode: Wallpaper
# Wallpaper
set $wallpaper_mode Wallpaper: (n)ext | (p)revious | (f)avorite | (t)oggle pause | (q)uotes next | quotes p(r)evious
bindsym $mod+Shift+w mode $wallpaper_mode
mode "$wallpaper_mode" {
        bindsym n exec --no-startup-id /usr/bin/variety --next
        bindsym p exec --no-startup-id /usr/bin/variety --previous
        bindsym f exec --no-startup-id /usr/bin/variety --favorite
        bindsym t exec --no-startup-id /usr/bin/variety --toggle-pause
        bindsym q exec --no-startup-id /usr/bin/variety --quotes-next
        bindsym r exec --no-startup-id /usr/bin/variety --quotes-previous

        # exit mode: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
# }}}
# }}}

#  {{{ Volume control
set $volumepath /usr/bin/i3-volume
set $statuscmd i3status-rs
set $statussig SIGRTMIN+10
set $volumestep 3
bindsym XF86AudioRaiseVolume exec $volumepath -np up $volumestep -t $statuscmd -u $statussig
bindsym XF86AudioLowerVolume exec $volumepath -np down $volumestep -t $statuscmd -u $statussig
bindsym XF86AudioMute        exec $volumepath -n mute -t $statuscmd -u $statussig
#  }}}

# {{{ Autostart programs
exec --no-startup-id /usr/bin/dunst
exec --no-startup-id /usr/bin/greenclip daemon
exec --no-startup-id /usr/bin/galculator
exec --no-startup-id /usr/lib/xfce-polkit/xfce-polkit
exec --no-startup-id /usr/bin/picom -b
exec --no-startup-id kitty --title="Scratchpad"
exec --no-startup-id kitty --title="Ranger" ranger
exec --no-startup-id /usr/bin/obsidian
# }}}

include ~/.config/i3/`hostname`.conf
